#!/bin/bash

# Configuration des flags d'erreurs pour bash
set -o errexit
set -o pipefail
set -o nounset

# Tries to connect to the Postgresql database. Returns 0 if it
# succeeds and 255 (-1) if it does not.
postgres_ready() {
python << END_PYTHON
import sys
import os
import psycopg2
from dotenv import load_dotenv
load_dotenv(".env")
try:
    psycopg2.connect(
        dbname=os.environ["DB_NAME"],
        user=os.environ["DB_USER"],
        password=os.environ["DB_PASSWORD"],
        host=os.environ["DB_HOST"],
        port=os.environ["DB_PORT"],
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)
END_PYTHON
}

# We wait until the database is ready and the postgres_ready function
# returns the value 0 (synonymous with success)
until postgres_ready; do
  >&2 echo 'Waiting for PostgreSQL to become available...'
  sleep 1
done

>&2 echo 'PostgreSQL is ready !'

# Execution of the /start file received in parameter
exec "$@"